{"version":3,"sources":["components/PeopleList/PeopleList.tsx","App.tsx","data/people.ts","index.tsx"],"names":["PeopleList","React","memo","peopleList","onSelected","className","role","length","map","person","type","cn","sex","onClick","name","id","people","born","died","fatherName","motherName","slug","post","index","App","delay","useState","query","setQuery","appliedQuery","setAppliedQuery","selectedPerson","setSelectedPerson","showPeopleList","setShowPeopleList","applyQuery","useCallback","debounce","handleChangePerson","handleFocus","useMemo","filteredPeople","filter","toLocaleLowerCase","trim","includes","toLowerCase","placeholder","value","onChange","event","inputText","target","onFocus","ReactDOM","render","document","getElementById"],"mappings":"2RAUaA,EAA8BC,IAAMC,MAAK,YAG/C,IAFLC,EAEI,EAFJA,WAEI,IADJC,kBACI,MADS,WAAS,EAClB,EACJ,OACE,qBAAKC,UAAU,gBAAgBC,KAAK,OAApC,SACE,qBAAKD,UAAU,mBAAf,SACGF,EAAWI,OAAS,EACnBJ,EAAWK,KAAI,SAACC,GAAD,OACb,qBACEJ,UAAU,gBADZ,SAIE,wBACEK,KAAK,SACLL,UAAWM,IAAG,CACZ,gBAAgC,MAAfF,EAAOG,IACxB,kBAAkC,MAAfH,EAAOG,MAE5BC,QAAS,kBAAMT,EAAWK,EAAjB,EANX,SAQGA,EAAOK,QAVLL,EAAOM,GAHD,IAkBf,qBAAKV,UAAU,gBAAf,SACE,mBAAGA,UAAU,yBAAb,kDAQX,IC/BKW,ECZoC,CACxC,CACEF,KAAM,oBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZC,KAAM,0BAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZC,KAAM,yBAER,CACEP,KAAM,iBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZC,KAAM,uBAER,CACEP,KAAM,kBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZC,KAAM,wBAER,CACEP,KAAM,sBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZC,KAAM,4BAER,CACEP,KAAM,wBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZC,KAAM,8BAER,CACEP,KAAM,wBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZC,KAAM,8BAER,CACEP,KAAM,kBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZC,KAAM,wBAER,CACEP,KAAM,kBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZC,KAAM,wBAER,CACEP,KAAM,wBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZC,KAAM,8BAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZC,KAAM,yBAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZC,KAAM,yBAER,CACEP,KAAM,2BACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZC,KAAM,iCAER,CACEP,KAAM,uBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZC,KAAM,6BAER,CACEP,KAAM,wBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZC,KAAM,8BAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,yBAER,CACEP,KAAM,0BACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZC,KAAM,gCAER,CACEP,KAAM,oBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZC,KAAM,0BAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZC,KAAM,yBAER,CACEP,KAAM,sBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZC,KAAM,4BAER,CACEP,KAAM,gBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZC,KAAM,sBAER,CACEP,KAAM,2BACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZC,KAAM,iCAER,CACEP,KAAM,iBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZC,KAAM,uBAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZC,KAAM,yBAER,CACEP,KAAM,iBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZC,KAAM,uBAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,yBAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZC,KAAM,yBAER,CACEP,KAAM,kBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZC,KAAM,wBAER,CACEP,KAAM,yBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZC,KAAM,+BAER,CACEP,KAAM,kBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZC,KAAM,wBAER,CACEP,KAAM,uBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,6BAER,CACEP,KAAM,iBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZC,KAAM,uBAER,CACEP,KAAM,sBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZC,KAAM,4BAER,CACEP,KAAM,kBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZC,KAAM,wBAER,CACEP,KAAM,mBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZC,KAAM,yBAER,CACEP,KAAM,gBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,sBAER,CACEP,KAAM,iBACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZC,KAAM,uBAER,CACEP,KAAM,cACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZC,KAAM,oBAER,CACEP,KAAM,gCACNF,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZC,KAAM,uCDlVsBb,KAAI,SAACc,EAAMC,GAAP,mBAAC,eAChCD,GAD+B,IAElCP,GAAIQ,EAAQ,GAFsB,IAKvBC,EAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4CJ,mBAAwB,MAApE,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEMC,EAAaC,sBACjBC,IAASP,EAAiB,KAC1B,CAACL,IAGGa,EAAqBF,uBACzB,SAAC3B,GACCuB,EAAkBvB,GAClBmB,EAASnB,EAAOK,MAChBoB,GAAkB,EACnB,GACD,IAGIK,EAAcC,mBAAQ,kBAAM,WAChCN,GAAkB,EACnB,CAF2B,GAEzB,IAaGO,EAAiBD,mBAAQ,WAC7B,OAAOxB,EAAO0B,QAAO,SAAAjC,GAAM,OAAIA,EAAOK,KAAK6B,oBAAoBC,OAC5DC,SAAShB,EAAaiB,cAAcF,OADZ,GAE5B,GAAE,CAACf,EAAcb,IAElB,OACE,uBAAMX,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACG0B,EAAc,iBACRA,QADQ,IACRA,OADQ,EACRA,EAAgBjB,KADR,oBACiBiB,QADjB,IACiBA,OADjB,EACiBA,EAAgBd,KADjC,qBAC2Cc,QAD3C,IAC2CA,OAD3C,EAC2CA,EAAgBb,KAD3D,KAEX,uBAGN,sBAAKb,UAAWM,IAAG,WAAY,CAAE,YAAasB,IAA9C,UACE,qBAAK5B,UAAU,mBAAf,SACE,uBACEK,KAAK,OACLqC,YAAY,2BACZ1C,UAAU,QACV2C,MAAOrB,EACPsB,SA/BgB,SAACC,GACzB,IAAMC,EAAYD,EAAME,OAAOJ,MAE/BpB,EAASuB,GACThB,EAAWgB,GAEc,KAArBA,EAAUP,QACZZ,EAAkB,KAErB,EAuBSqB,QAASd,MAKb,cAAC,EAAD,CACEpC,WAAYsC,EACZrC,WAAYkC,SAKrB,EEnFDgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.8b9297cf.chunk.js","sourcesContent":["import React from 'react';\nimport './PeopleList.scss';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  peopleList: Person[];\n  onSelected?: (person: Person) => void;\n}\n\nexport const PeopleList: React.FC<Props> = React.memo(({\n  peopleList,\n  onSelected = () => { },\n}) => {\n  return (\n    <div className=\"dropdown-menu\" role=\"menu\">\n      <div className=\"dropdown-content\">\n        {peopleList.length > 0 ? (\n          peopleList.map((person) => (\n            <div\n              className=\"dropdown-item\"\n              key={person.id}\n            >\n              <button\n                type=\"button\"\n                className={cn({\n                  'has-text-link': person.sex === 'm',\n                  'has-text-danger': person.sex === 'f',\n                })}\n                onClick={() => onSelected(person)}\n              >\n                {person.name}\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"dropdown-item\">\n            <p className=\"no-suggestions-message\">\n              No matching suggestions message\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n","import React, {\n  useState, useCallback, useMemo,\n} from 'react';\nimport './App.scss';\nimport debounce from 'lodash.debounce';\nimport cn from 'classnames';\nimport { peopleFromServer } from './data/people';\nimport { PeopleList } from './components/PeopleList/PeopleList';\nimport { Person } from './types/Person';\n\ninterface Props {\n  delay?: number;\n}\n\nconst people = peopleFromServer.map((post, index) => ({\n  ...post,\n  id: index + 1,\n}));\n\nexport const App: React.FC<Props> = ({ delay }) => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const [showPeopleList, setShowPeopleList] = useState(false);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000),\n    [delay],\n  );\n\n  const handleChangePerson = useCallback(\n    (person: Person) => {\n      setSelectedPerson(person);\n      setQuery(person.name);\n      setShowPeopleList(false);\n    },\n    [],\n  );\n\n  const handleFocus = useMemo(() => () => {\n    setShowPeopleList(true);\n  }, []);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputText = event.target.value;\n\n    setQuery(inputText);\n    applyQuery(inputText);\n\n    if (inputText.trim() === '') {\n      setSelectedPerson(null);\n    }\n  };\n\n  const filteredPeople = useMemo(() => {\n    return people.filter(person => person.name.toLocaleLowerCase().trim()\n      .includes(appliedQuery.toLowerCase().trim()));\n  }, [appliedQuery, people]);\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson\n          ? `${selectedPerson?.name} (${selectedPerson?.born} - ${selectedPerson?.died})`\n          : 'No selected person'}\n      </h1>\n\n      <div className={cn('dropdown', { 'is-active': showPeopleList })}>\n        <div className=\"dropdown-trigger\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={query}\n            onChange={handleQueryChange}\n            onFocus={handleFocus}\n          // onBlur={handleBlur}\n          />\n        </div>\n\n        <PeopleList\n          peopleList={filteredPeople}\n          onSelected={handleChangePerson}\n        />\n      </div>\n    </main>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}